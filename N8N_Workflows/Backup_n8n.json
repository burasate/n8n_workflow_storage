{
  "createdAt": "2025-06-15T03:16:10.237Z",
  "updatedAt": "2025-06-15T04:04:41.000Z",
  "id": "6JYkJBc0dW0GLvIi",
  "name": "Backup n8n",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "id": "d9b30059-fac5-4364-8750-912be6b6303a",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        320,
        40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 1910.7813046051347,
        "color": 6
      },
      "id": "1e43d536-eaed-4ba5-a57e-162260446b31",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c01a7c41-2fce-4af2-9c90-c131ad3c3c46",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -100,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "2de9f0ed-fbed-47f4-98fb-984765df3f83",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        720,
        140
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "8JxYcgciM6o7vOtg",
          "name": "n8n localhost api"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "e62d4c37-4611-4516-a8e6-42486ac6d0a7",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1560,
        620
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "8f84c013-a23b-4c94-8821-49424b5fe013",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        520,
        500
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "81b5ec07-7373-4d5b-9f90-ce66e56c9e91",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        280,
        520
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "e7a91683-1915-4c18-9b96-fa1169e11c3d",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        280,
        780
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "20d63f09-9df0-43dc-8774-bd608a1862ff",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        480,
        780
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "3a5ed318-e12b-43d3-b868-4c9c4ab0a895",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        880,
        780
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "1ba8ef86-e655-4c8f-b5f6-bb16c1101237",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1100,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "2c780473-424a-40e2-91d9-ac3365ee58c7",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1100,
        780
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "5488045f-279d-4b56-bfdc-1033e91a84ce",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1100,
        980
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_name }}"
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "a16395ca-7cd3-4502-aa49-cef3492cec06",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        980
      ],
      "typeVersion": 1,
      "webhookId": "908f324c-0bc6-4f77-b46e-45cd20270bd6",
      "credentials": {
        "githubApi": {
          "id": "HsLfo7JNtGN25WE2",
          "name": "DEX3D"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_name }}"
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "9cd4aafc-86fc-46cb-af50-c3a52156d172",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1320,
        780
      ],
      "typeVersion": 1,
      "webhookId": "6c04af3a-2f29-4ec1-bc0a-be2f1a3d78a4",
      "credentials": {
        "githubApi": {
          "id": "HsLfo7JNtGN25WE2",
          "name": "DEX3D"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "429446f4-dfd2-4e14-937a-906e18c37ea5",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        920,
        140
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 1,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "b76133f2-9b1f-4be0-ac5c-e001682dd755",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        320,
        240
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "8c276643-a60e-4ab1-a258-76f2b305d0a1",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        680,
        780
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "701f4785-efc3-4216-b502-c3a1e78b0dc9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        -40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416,
        "width": 1273,
        "color": 7
      },
      "id": "53e72ab0-aacd-46b7-affc-a3fef2a1d65a",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        -40
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#notifications"
        },
        "text": "=:information_source:  Starting Workflow Backup [{{ $execution.id }}]",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "e462f950-369f-4653-a7e2-19da185daf13",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        560,
        140
      ],
      "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
      "typeVersion": 2.2,
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "17b7a2a5-6883-454e-adbd-3d5e12243193",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1140,
        160
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_name }}"
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "adcbc000-ca54-4f80-a878-12bda8a9ef8e",
      "name": "Get file data1",
      "type": "n8n-nodes-base.github",
      "position": [
        80,
        520
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "6c87b6dc-e6fc-43fe-a438-a7abc0f2fd65",
      "credentials": {
        "githubApi": {
          "id": "HsLfo7JNtGN25WE2",
          "name": "DEX3D"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "burasate"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=n8n_workflow_storage"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "="
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "ec26294a-aec1-4c26-b75e-73a38f56c250",
      "name": "Config1",
      "type": "n8n-nodes-base.set",
      "position": [
        80,
        800
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1360,
        180
      ],
      "id": "281fc63d-8fc7-451e-ac19-cd22fb84a70d",
      "name": "Discord",
      "webhookId": "2a10ede5-0bf7-4d2d-be77-31aea60e229b",
      "credentials": {
        "discordWebhookApi": {
          "id": "XEwLZgcGkqAdFJjT",
          "name": "node webhook"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=✅ Backup has completed - {{ $('n8n').all().length }} workflows have been processed.",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1140,
        -20
      ],
      "id": "c41fdc65-b2ad-48f0-a802-47a93c7125f4",
      "name": "Discord1",
      "webhookId": "2a10ede5-0bf7-4d2d-be77-31aea60e229b",
      "credentials": {
        "discordWebhookApi": {
          "id": "XEwLZgcGkqAdFJjT",
          "name": "node webhook"
        }
      },
      "disabled": true
    }
  ],
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Discord1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          },
          {
            "node": "Config1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data1": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config1": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          },
          {
            "node": "Get file data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Discord": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "65a8e06e-2671-42d6-8650-097025158c16",
  "triggerCount": 0,
  "tags": []
}